import {SignInButton, SignOutButton, useUser} from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";

import { RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime"
dayjs.extend(relativeTime)

const CreatePostWizard = () => {
	const { user } = useUser()
	if (!user) return null;
	console.log(user);

	return (
	<div className="flew gap-3 w=full">
		<img 
			src={user.profileImageUrl} 
			alt="Profile Image" 
			className="w-14 h-14 rounded-full"
		/>
		<input placeholder="Type some emojis!" className="outline-none grow bg-transparent "/>
	</div>
	);
};


type PostWithUser = RouterOutputs["posts"]["getAll"][number]
const PostView = (props: PostWithUser) => {
	const { post, author} = props;
	return (
		<div key={post.id} className="border-b border-slate-400 p-4">
			<img src={author.profileImageUrl} alt="Profile Image" className="w-14 h-14 rounded-full"/>
			<div className="flex flex-col">
				<div className="flex gap-1 text-slate-300">
					<span>{author.username && `@${author.username}`}</span>
					<span>{` - ${dayjs(post.createdAt).fromNow()}`}</span>
				</div>
				<span>
					{post.content}
				</span>
			</div>
		</div>
	);
};

  export default function Home() {
  const user = useUser();


  const {data} = api.posts.getAll.useQuery();
  //if (isLoading) return <div>loading..</div>
  if (!data) return <div> Something went wrong...</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="h-full w-full md:max-w-2xl border-x border-slate-400 ">
			<div className="border-b border-slate-400 p-4">
				{!user.isSignedIn && (
					<div className="flex justify-center">
						<SignInButton/>
					</div>
					)}
				{user.isSignedIn && <CreatePostWizard />}
			</div>
			<div className="flex flex-col">
				{[...data, ...data]?.map((fullPost) => (
					<PostView {...fullPost} key={fullPost.post.id}/>
				))}
			</div>
		</div>
	  </main>
    </>
  );
}
